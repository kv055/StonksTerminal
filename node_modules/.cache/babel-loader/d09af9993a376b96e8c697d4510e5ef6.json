{"ast":null,"code":"var _jsxFileName = \"/home/hackerboi/Dokumente/stonksterminal/src/Components/NewPositions.jsx\";\nimport React from 'react';\n\nclass NewPosition extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      // datum: null,\n      tradecollateral: null,\n      accountballance: null,\n      faktor: null,\n      einstiegspreis: null,\n      statusactive: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      // datum : new Date().toLocaleString(),\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    let price = 9000;\n    let schwankungAbsolut = price - this.state.einstiegspreiseinstiegspreis;\n    schwankungAbsolut = Math.trunc(schwankungAbsolut);\n    let schwankung = (price / this.state.einstiegspreis - 1) * 100;\n    schwankung = Math.trunc(schwankung);\n    let leverage = this.state.tradecollateral * this.state.faktor;\n    let profitloss = null;\n    let liquidationlevel = null; //Profit/Verlusst Rechner im Fall einer Long Position\n\n    profitloss = leverage / 100 * schwankung; //Liquidationslevel bei einer long position\n\n    liquidationlevel = (0.8 * this.state.tradecollateral - this.state.accountballance) / (leverage / 100); //Prozentuale Preisver√§nderung bei der dann Liquidiert wird\n\n    let equity = this.state.accountballance + profitloss;\n    let marginlevel = equity / this.state.tradecollateral * 100;\n    let liquidationpreis = this.state.einstiegspreis - -liquidationlevel * 0.01 * this.state.einstiegspreis;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"Margin Level Calculator\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"1\",\n      name: \"tradecollateral\",\n      value: this.state.tradecollateral,\n      placeholder: \"Trade Collateral\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"2\",\n      name: \"accountballance\",\n      value: this.state.accountballance,\n      placeholder: \"Account Ballance\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"3\",\n      name: \"faktor\",\n      value: this.state.faktor,\n      placeholder: \"Faktor/Hebel\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"4\",\n      name: \"einstiegspreis\",\n      value: this.state.einstiegspreis,\n      placeholder: \"Einstiegspreis\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"Create Position\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Trade Collateral: \", this.state.tradecollateral), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Account Ballance: \", this.state.accountballance), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Eingesetzter Faktor/Hebel: \", this.state.faktor), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Einstiegspreis: \", this.state.einstiegspreis), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Aktueller Preis: \", price), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Kursverlauf: \", schwankungAbsolut), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Profit/Loss:\", profitloss), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Leverage (Gehebelter Betrag):\", leverage), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"Equity: \", equity), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Marginlevel: \", marginlevel), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Liquiditons level: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Liquiditations Preis: \", liquidationpreis));\n  }\n\n}\n\nexport default NewPosition;","map":{"version":3,"sources":["/home/hackerboi/Dokumente/stonksterminal/src/Components/NewPositions.jsx"],"names":["React","NewPosition","Component","constructor","state","tradecollateral","accountballance","faktor","einstiegspreis","statusactive","handleChange","bind","event","setState","target","name","value","render","price","schwankungAbsolut","einstiegspreiseinstiegspreis","Math","trunc","schwankung","leverage","profitloss","liquidationlevel","equity","marginlevel","liquidationpreis"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass NewPosition extends React.Component {\n    constructor() {\n        super();\n        this.state = { \n            // datum: null,\n            tradecollateral: null,\n            accountballance: null,\n            faktor: null,\n            einstiegspreis: null,\n            statusactive: true\n         }\n         this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event){\n        this.setState({\n            // datum : new Date().toLocaleString(),\n            [event.target.name] : event.target.value\n\n        });\n\n\n\n    }\n\n    render() { \n        let price = 9000;\n\n        let schwankungAbsolut = price - this.state.einstiegspreiseinstiegspreis;\n        schwankungAbsolut = Math.trunc(schwankungAbsolut);\n        \n        let schwankung = ((price / this.state.einstiegspreis) - 1) * 100;\n        schwankung = Math.trunc(schwankung);\n        \n        let leverage = this.state.tradecollateral * this.state.faktor;\n            \n        let profitloss = null;\n        \n        let liquidationlevel = null;\n        \n     \n          //Profit/Verlusst Rechner im Fall einer Long Position\n          profitloss = (leverage / 100) * schwankung;\n        \n          //Liquidationslevel bei einer long position\n          liquidationlevel = ((0.8 * this.state.tradecollateral) - this.state.accountballance) / (leverage / 100);\n          //Prozentuale Preisver√§nderung bei der dann Liquidiert wird\n\n        \n        let equity = this.state.accountballance + profitloss;\n        \n        let marginlevel = (equity / this.state.tradecollateral) * 100;\n        \n        \n        let liquidationpreis = this.state.einstiegspreis-((-liquidationlevel * 0.01)*this.state.einstiegspreis);\n        \n        \n    \n\n        return (  \n            <div>\n                <h1>Margin Level Calculator</h1>\n                <input type=\"number\" id=\"1\" name=\"tradecollateral\" value={this.state.tradecollateral} placeholder=\"Trade Collateral\" onChange={this.handleChange}/>\n                <br></br>\n                <input type=\"number\" id=\"2\" name=\"accountballance\" value={this.state.accountballance} placeholder=\"Account Ballance\" onChange={this.handleChange}/>\n                <br></br>\n                <input type=\"number\" id=\"3\" name=\"faktor\" value={this.state.faktor} placeholder=\"Faktor/Hebel\" onChange={this.handleChange}/>\n                <br></br>\n                <input type=\"number\" id=\"4\" name=\"einstiegspreis\" value={this.state.einstiegspreis} placeholder=\"Einstiegspreis\" onChange={this.handleChange}/>\n                <br></br>\n                <button id=\"5\">Create Position</button>\n\n                <p>Trade Collateral: {this.state.tradecollateral}</p> \n                <p>Account Ballance: {this.state.accountballance}</p>\n                <p>Eingesetzter Faktor/Hebel: {this.state.faktor}</p>\n                <p>Einstiegspreis: {this.state.einstiegspreis}</p> \n\n\n        <p>Aktueller Preis: {price}</p> \n        <p>Kursverlauf: {schwankungAbsolut}</p>\n        <p>Profit/Loss:{profitloss}</p>  \n        <p>Leverage (Gehebelter Betrag):{leverage}</p> \n        <p>Equity: {equity}</p>  \n        <p>Marginlevel: {marginlevel}</p>   \n                <p>Liquiditons level: </p>     \n        <p>Liquiditations Preis: {liquidationpreis}</p>    \n            </div>\n        );\n    }\n}\n \nexport default NewPosition;"]},"metadata":{},"sourceType":"module"}