{"ast":null,"code":"var _jsxFileName = \"/home/hackerboi/Dokumente/stonksterminal/src/Components/ChartControlPanel.jsx\";\n// import React from 'react';\n// function ChartControlPanel(){\n//     // constructor(){\n//     //     super();\n//     //     this.state = {\n//     //     }\n//     // }\n//     // render(){\n//         return(\n//             <div>\n//                 <p>Datepicker: StartDate/EndDate (im ISO Format (YYYY-MM-DD)eingeben. BSP: 2020-12-13) </p>\n//                 <input id=\"1\" type=\"text\" name=\"StartDate\" value=\"\">\n//                 <p>/</p>\n//                 <input id=\"2\" type=\"text\" name=\"EndDate\" value=\"\">\n//                 <br>\n//                 <br>\n//                 <button id=\"3\" type=\"button\" name=\"button\">TEST</button>\n//             </div>\n//         )\n//     }\n// // }\n// export default ChartControlPanel\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n      btcUsdNow: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch('https://api.coindesk.com/v1/bpi/currentprice.json', {\n      mode: 'no-cors'\n    }).then(response => response.json()).then(data => this.setState({\n      btcUsdNow: data,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    console.log(this.state.btcUsdNow); // let displayBtcUsdNow = this.state.isLoading === true ? \"L채dt\" :  this.state.btcUsdNow.Datum;\n\n    let displayBtcUsdNow = this.state.isLoading === true ? \"L채dt\" : this.state.btcUsdNow.Datum;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, displayBtcUsdNow), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Datepicker: \"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hackerboi/Dokumente/stonksterminal/src/Components/ChartControlPanel.jsx"],"names":["React","App","Component","constructor","state","isLoading","btcUsdNow","componentDidMount","setState","fetch","mode","then","response","json","data","render","console","log","displayBtcUsdNow","Datum"],"mappings":";AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAACH,MAAAA,SAAS,EAAE;AAAZ,KAAd;AACAI,IAAAA,KAAK,CAAC,mDAAD,EAAqD;AAACC,MAAAA,IAAI,EAAE;AAAP,KAArD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI,KAAKN,QAAL,CAAc;AAC1BF,MAAAA,SAAS,EAAEQ,IADe;AAE1BT,MAAAA,SAAS,EAAE;AAFe,KAAd,CAFhB;AAMD;;AAEDU,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWE,SAAvB,EADO,CAEP;;AACA,QAAIY,gBAAgB,GAAG,KAAKd,KAAL,CAAWC,SAAX,KAAyB,IAAzB,GAAgC,MAAhC,GAA0C,KAAKD,KAAL,CAAWE,SAAX,CAAqBa,KAAtF;AACI,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,gBAAJ,CAHH,eAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJH,CADD;AASD;;AAlC2B;;AAqClC,eAAejB,GAAf","sourcesContent":["// import React from 'react';\n\n// function ChartControlPanel(){\n//     // constructor(){\n//     //     super();\n//     //     this.state = {\n\n//     //     }\n\n//     // }\n//     // render(){\n//         return(\n//             <div>\n                \n//                 <p>Datepicker: StartDate/EndDate (im ISO Format (YYYY-MM-DD)eingeben. BSP: 2020-12-13) </p>\n//                 <input id=\"1\" type=\"text\" name=\"StartDate\" value=\"\">\n//                 <p>/</p>\n//                 <input id=\"2\" type=\"text\" name=\"EndDate\" value=\"\">\n//                 <br>\n//                 <br>\n//                 <button id=\"3\" type=\"button\" name=\"button\">TEST</button>\n\n//             </div>\n//         )\n//     }\n// // }\n\n\n\n// export default ChartControlPanel\n\nimport React from 'react';\n \nclass App extends React.Component {\n  \n  constructor() {\n    super();\n \n    this.state = {\n      isLoading: false,\n      btcUsdNow: []\n    };\n  }\n \n  componentDidMount() {\n    this.setState({isLoading: true});\n    fetch('https://api.coindesk.com/v1/bpi/currentprice.json',{mode: 'no-cors'})\n      .then(response => response.json())\n      .then(data => this.setState({ \n        btcUsdNow: data, \n        isLoading: false \n      }));\n  }\n  \n  render() {\n    console.log(this.state.btcUsdNow);\n    // let displayBtcUsdNow = this.state.isLoading === true ? \"L채dt\" :  this.state.btcUsdNow.Datum;\n    let displayBtcUsdNow = this.state.isLoading === true ? \"L채dt\" :  this.state.btcUsdNow.Datum;\n        return (\n         <div>\n           {/* <Component2  \n            Datum={displayBtcUsdNow} */}\n            <p>{displayBtcUsdNow}</p>\n            <p>Datepicker: </p>\n        \n          </div>\n        )\n      }\n}\n \nexport default App;\n"]},"metadata":{},"sourceType":"module"}