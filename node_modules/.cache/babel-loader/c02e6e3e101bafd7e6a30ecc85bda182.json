{"ast":null,"code":"var _jsxFileName = \"/home/hackerboi/Dokumente/stonksterminal/src/Components/chart.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nclass chart extends React.Component() {\n  constructor() {\n    super();\n    this.state = {\n      data: {\n        labels: [\"2020-07-01\", \"2020-07-02\", \"2020-07-03\", \"2020-07-04\", \"2020-07-05\", \"2020-07-06\", \"2020-07-07\"],\n        //Xachse\n        datasets: [{\n          data: [9153.95, 9199.875, 9094.955, 9083.395, 9075.3125, 9203.25, 9265.375],\n          //Yachse //Data als Array\n          fill: false,\n          backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n          borderColor: ['rgba(255, 99, 132, 1)'],\n          borderWidth: 2 //Breite der Linie\n\n        } //--------------------------------------------------\n        //Weiteres Dataset hinzufügen\n        //     {\n        //       data: Liquidationlevel, //Yachse //Data als Array\n        //       fill: false,\n        //       backgroundColor: [\n        //         'rgba(50, 50, 132, 0.2)',\n        //       ],\n        //       borderColor: [\n        //         'rgba(206, 88, 132, 1)',\n        //       ],\n        //       borderWidth: 2 //Breite der Linie\n        // //--------------------------------------------------\n        //     }\n        ]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            type: 'logarithmic',\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    };\n  } // ComponentDidMount(){\n  // }\n\n\n  render() {\n    //TestData\n    // let Xaxe = [\"2020-07-01\",\"2020-07-02\",\"2020-07-03\",\"2020-07-04\",\"2020-07-05\",\"2020-07-06\",\"2020-07-07\"];\n    // let Yaxe = [9153.95,9199.875,9094.955,9083.395,9075.3125,9203.25,9265.375];\n    // this.setState({\n    //     data.labels : Xaxe\n    // });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \"data=\", this.state.data, \"options=\", this.state.options));\n  }\n\n}\n\nexport default chart;","map":{"version":3,"sources":["/home/hackerboi/Dokumente/stonksterminal/src/Components/chart.jsx"],"names":["React","Line","chart","Component","constructor","state","data","labels","datasets","fill","backgroundColor","borderColor","borderWidth","options","scales","yAxes","type","ticks","beginAtZero","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAAN,EAApB,CAAqC;AACjCC,EAAAA,WAAW,GAAE;AACT;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAE,CAAC,YAAD,EAAc,YAAd,EAA2B,YAA3B,EAAwC,YAAxC,EAAqD,YAArD,EAAkE,YAAlE,EAA+E,YAA/E,CADN;AACoG;AACtGC,QAAAA,QAAQ,EAAE,CACN;AAEFF,UAAAA,IAAI,EAAE,CAAC,OAAD,EAAS,QAAT,EAAkB,QAAlB,EAA2B,QAA3B,EAAoC,SAApC,EAA8C,OAA9C,EAAsD,QAAtD,CAFJ;AAEqE;AACvEG,UAAAA,IAAI,EAAE,KAHJ;AAIFC,UAAAA,eAAe,EAAE,CACf,yBADe,CAJf;AASFC,UAAAA,WAAW,EAAE,CACX,uBADW,CATX;AAaFC,UAAAA,WAAW,EAAE,CAbX,CAaa;;AAbb,SADM,CAiBV;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAnCU;AAFR,OADG;AA0CTC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CAAC;AACNC,YAAAA,IAAI,EAAE,aADA;AAENC,YAAAA,KAAK,EAAE;AACLC,cAAAA,WAAW,EAAE;AADR;AAFD,WAAD;AADD;AADH;AA1CA,KAAb;AAqDH,GAzDgC,CA2DjC;AAEA;;;AAEAC,EAAAA,MAAM,GAAE;AAEJ;AAEA;AACA;AAEA;AACA;AACA;AAGF,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACU,KAAKd,KAAL,CAAWC,IADrB,cAEa,KAAKD,KAAL,CAAWQ,OAFxB,CADJ,CADF;AASD;;AApFgC;;AAyFrC,eAAeX,KAAf","sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nclass chart extends React.Component(){\n    constructor(){\n        super();\n\n        this.state = {\n            data: {\n                labels: [\"2020-07-01\",\"2020-07-02\",\"2020-07-03\",\"2020-07-04\",\"2020-07-05\",\"2020-07-06\",\"2020-07-07\"], //Xachse\n                datasets: [\n                    {\n            \n                  data: [9153.95,9199.875,9094.955,9083.395,9075.3125,9203.25,9265.375], //Yachse //Data als Array\n                  fill: false,\n                  backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n            \n            \n                  ],\n                  borderColor: [\n                    'rgba(255, 99, 132, 1)',\n            \n                  ],\n                  borderWidth: 2 //Breite der Linie\n            \n                },\n                //--------------------------------------------------\n                //Weiteres Dataset hinzufügen\n\n                //     {\n                //       data: Liquidationlevel, //Yachse //Data als Array\n                //       fill: false,\n                //       backgroundColor: [\n                //         'rgba(50, 50, 132, 0.2)',\n                \n                \n                //       ],\n                //       borderColor: [\n                //         'rgba(206, 88, 132, 1)',\n                \n                //       ],\n                //       borderWidth: 2 //Breite der Linie\n                \n                // //--------------------------------------------------\n                //     }\n                ]\n            },\n\n            options: {\n                scales: {\n                  yAxes: [{\n                    type: 'logarithmic',\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }]\n                }\n            }\n        };\n    }\n\n    // ComponentDidMount(){\n\n    // }\n\n    render(){\n\n        //TestData\n\n        // let Xaxe = [\"2020-07-01\",\"2020-07-02\",\"2020-07-03\",\"2020-07-04\",\"2020-07-05\",\"2020-07-06\",\"2020-07-07\"];\n        // let Yaxe = [9153.95,9199.875,9094.955,9083.395,9075.3125,9203.25,9265.375];\n\n        // this.setState({\n        //     data.labels : Xaxe\n        // });\n\n\n      return(\n        <div>\n            <Line>\n                data={this.state.data}\n                options={this.state.options}\n            </Line>\n        </div>\n      )\n\n    }\n\n}\n\n\nexport default chart;"]},"metadata":{},"sourceType":"module"}