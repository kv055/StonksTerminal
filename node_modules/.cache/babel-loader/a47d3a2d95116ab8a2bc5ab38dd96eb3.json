{"ast":null,"code":"var _jsxFileName = \"/home/hackerboi/Dokumente/stonksterminal/src/Data/chartdata.js\";\n// import React from 'react';\n// class App extends React.Component(){\n//     constructor(){\n//         super();\n//         this.state = {\n//            pricedata:  null\n//         };\n//     }\n//     componentDidMount(){\n//         fetch('https://api.coindesk.com/v1/bpi/historical/close.json?start=2020-07-01&end=2020-07-07')\n//         .then(response => response.json())\n//         .then(data => \n//         this.setState({ \n//         btcUsdChart: data.bpi \n//         }));\n//     };\n//     render(){\n//         let tempentries = Object.entries(this.state.pricedata);\n//         let chartdata = [[],[]];\n//         for (const element of tempentries) {\n//             chartdata.push(element[1]);\n//             chartdata.push(element[0]);\n//         };\n//         return(\n//             <div>\n//                 <p>{chartdata[0]}</p>\n//                 <p>{chartdata[1]}</p>\n//             </div>\n//         )\n//     };\n// }\n// export default App;\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n      btcUsdNow: [],\n      btcUsdChart: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch('https://api.coindesk.com/v1/bpi/currentprice.json', {\n      mode: 'cors'\n    }).then(response => response.json()).then(data => this.setState({\n      btcUsdNow: data.bpi.USD.rate_float\n    }));\n    fetch('https://api.coindesk.com/v1/bpi/historical/close.json?start=2020-07-01&end=2020-07-07', {\n      mode: 'cors'\n    }).then(response => response.json()).then(data => this.setState({\n      btcUsdChart: data.bpi,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    let displayBtcUsdNow = this.state.isLoading === true ? \"Lädt\" : this.state.btcUsdNow;\n    let anzeigeX = null;\n    let anzeigeY = null;\n\n    function todisplay(chartdata) {\n      let tempentries = Object.entries(chartdata);\n      let Xachse = [];\n      let Yachse = [];\n\n      for (const element of tempentries) {\n        Yachse.push(element[1]);\n        Xachse.push(element[0]);\n      }\n\n      ;\n      console.log(Xachse);\n      console.log(Yachse);\n    }\n\n    ;\n    todisplay(this.state.btcUsdChart); // let displayBtcUsdChartSwitchX = this.state.isLoading === true ? \"Lädt\" :  anzeigeX;\n    // let displayBtcUsdChartSwitchY = this.state.isLoading === true ? \"Lädt\" :  anzeigeY;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, displayBtcUsdNow), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, anzeigeX), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, anzeigeY));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hackerboi/Dokumente/stonksterminal/src/Data/chartdata.js"],"names":["React","App","Component","constructor","state","isLoading","btcUsdNow","btcUsdChart","componentDidMount","setState","fetch","mode","then","response","json","data","bpi","USD","rate_float","render","displayBtcUsdNow","anzeigeX","anzeigeY","todisplay","chartdata","tempentries","Object","entries","Xachse","Yachse","element","push","console","log"],"mappings":";AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAACJ,MAAAA,SAAS,EAAE;AAAZ,KAAd;AAEAK,IAAAA,KAAK,CAAC,mDAAD,EAAqD;AAACC,MAAAA,IAAI,EAAE;AAAP,KAArD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI,KAAKN,QAAL,CAAc;AAC1BH,MAAAA,SAAS,EAAES,IAAI,CAACC,GAAL,CAASC,GAAT,CAAaC;AADE,KAAd,CAFhB;AAOAR,IAAAA,KAAK,CAAC,uFAAD,EAAyF;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAzF,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAGR,KAAKN,QAAL,CAAc;AACdF,MAAAA,WAAW,EAAEQ,IAAI,CAACC,GADJ;AAEdX,MAAAA,SAAS,EAAE;AAFG,KAAd,CALF;AAUD;;AAEDc,EAAAA,MAAM,GAAG;AAEP,QAAIC,gBAAgB,GAAG,KAAKhB,KAAL,CAAWC,SAAX,KAAyB,IAAzB,GAAgC,MAAhC,GAA0C,KAAKD,KAAL,CAAWE,SAA5E;AAEA,QAAIe,QAAQ,GAAG,IAAf;AACA,QAAIC,QAAQ,GAAG,IAAf;;AAEA,aAASC,SAAT,CAAoBC,SAApB,EAA8B;AAC5B,UAAIC,WAAW,GAAGC,MAAM,CAACC,OAAP,CAAeH,SAAf,CAAlB;AACA,UAAII,MAAM,GAAG,EAAb;AACA,UAAIC,MAAM,GAAG,EAAb;;AACA,WAAK,MAAMC,OAAX,IAAsBL,WAAtB,EAAmC;AACjCI,QAAAA,MAAM,CAACE,IAAP,CAAYD,OAAO,CAAC,CAAD,CAAnB;AACAF,QAAAA,MAAM,CAACG,IAAP,CAAYD,OAAO,CAAC,CAAD,CAAnB;AACD;;AAAA;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAGD;;AAAA;AACLN,IAAAA,SAAS,CAAC,KAAKnB,KAAL,CAAWG,WAAZ,CAAT,CApBW,CAyBT;AAEA;;AAEM,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIa,gBAAJ,CAFH,eAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,QAAJ,CAPH,eAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,QAAJ,CARH,CADD;AAaD;;AA5E2B;;AA+ElC,eAAerB,GAAf","sourcesContent":["\n// import React from 'react';\n\n// class App extends React.Component(){\n//     constructor(){\n//         super();\n\n//         this.state = {\n//            pricedata:  null\n//         };\n//     }\n\n\n//     componentDidMount(){\n//         fetch('https://api.coindesk.com/v1/bpi/historical/close.json?start=2020-07-01&end=2020-07-07')\n//         .then(response => response.json())\n//         .then(data => \n\n//         this.setState({ \n//         btcUsdChart: data.bpi \n\n//         }));\n//     };\n\n\n\n\n//     render(){\n//         let tempentries = Object.entries(this.state.pricedata);\n//         let chartdata = [[],[]];\n\n\n//         for (const element of tempentries) {\n//             chartdata.push(element[1]);\n//             chartdata.push(element[0]);\n//         };\n\n        \n//         return(\n//             <div>\n//                 <p>{chartdata[0]}</p>\n//                 <p>{chartdata[1]}</p>\n//             </div>\n//         )\n//     };\n\n// }\n\n// export default App;\n\n\nimport React from 'react';\n \nclass App extends React.Component {\n  \n  constructor() {\n    super();\n \n    this.state = {\n      isLoading: false,\n      btcUsdNow: [],\n      btcUsdChart: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({isLoading: true});\n    \n    fetch('https://api.coindesk.com/v1/bpi/currentprice.json',{mode: 'cors'})\n      .then(response => response.json())\n      .then(data => this.setState({ \n        btcUsdNow: data.bpi.USD.rate_float, \n        \n      }));\n      \n    fetch('https://api.coindesk.com/v1/bpi/historical/close.json?start=2020-07-01&end=2020-07-07',{mode: 'cors'})\n    .then(response => response.json())\n    .then(data => \n\n      \n      this.setState({ \n      btcUsdChart: data.bpi, \n      isLoading: false \n\n    }));\n  }\n  \n  render() {\n\n    let displayBtcUsdNow = this.state.isLoading === true ? \"Lädt\" :  this.state.btcUsdNow;\n    \n    let anzeigeX = null;\n    let anzeigeY = null;\n    \n    function todisplay (chartdata){\n      let tempentries = Object.entries(chartdata);\n      let Xachse = [];\n      let Yachse = [];\n      for (const element of tempentries) {\n        Yachse.push(element[1]);\n        Xachse.push(element[0]);\n      };\n      console.log(Xachse);\n      console.log(Yachse);\n\n\n    };\ntodisplay(this.state.btcUsdChart)\n\n\n    \n\n  // let displayBtcUsdChartSwitchX = this.state.isLoading === true ? \"Lädt\" :  anzeigeX;\n  \n  // let displayBtcUsdChartSwitchY = this.state.isLoading === true ? \"Lädt\" :  anzeigeY;\n\n        return (\n         <div>\n            \n            <p>{displayBtcUsdNow}</p>\n            \n            {/* <p>{displayBtcUsdChartSwitchX}</p> */}\n            {/* <p>{displayBtcUsdChartSwitchY}</p> */}\n\n            <p>{anzeigeX}</p>\n            <p>{anzeigeY}</p>\n\n          </div>\n        )\n      }\n}\n \nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}